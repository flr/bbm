% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generic_methods.R, R/createInits_method.R
\docType{methods}
\name{createInits}
\alias{createInits}
\alias{createInits-methods}
\alias{createInits,FLStock,ANY,ANY-method}
\alias{createInits,FLQuant,FLIndices,FLIndices-method}
\alias{createInits,FLQuant,FLQuant,FLQuant-method}
\alias{createInits,FLStock,FLQuant,FLQuant-method}
\title{Method createInits}
\usage{
createInits(object, indicesB, indicesP, ...)

\S4method{createInits}{FLQuant,FLQuants,FLQuants}(object, indicesB,
  indicesP, findicesB, findicesP, g)

\S4method{createInits}{FLStock,ANY,ANY}(object, indicesB, indicesP,
  findicesB = NULL, findicesP = NULL, g)

\S4method{createInits}{FLQuant,FLIndices,FLIndices}(object, indicesB,
  indicesP, findicesB = NULL, findicesP = NULL, g)

\S4method{createInits}{FLQuant,FLQuant,FLQuant}(object, indicesB, indicesP,
  findicesB, findicesP, g)
}
\arguments{
\item{object}{An \code{FLQuant} with catch information (for recruits and adults) or an \code{FLStock}.}

\item{indicesB}{Abundance indices in total biomass (element of class: \code{FLQuants}, \code{FLQuant} or \code{FLIndices}) from surveys.
Please assign a survey name to each index.}

\item{indicesP}{Percentage of recruits in biomass (element of class: \code{FLQuants}, \code{FLQuant} or \code{FLIndices}) from surveys.
Please assign a survey name to each proportion.}

\item{findicesB}{A \code{vector} with fraction of the year corresponding to each of the indicesB.}

\item{findicesP}{A \code{vector} with fraction of the year corresponding to each of the indicesP.}

\item{g}{A \code{vector} with information on instantaneous rate of biomass decrease, g = M - G, for recruits (rec) and adults (adult).}
}
\value{
An object of class FLPar.
}
\description{
Function for generating intial values for the parameters of the \code{bbm} function,
given information on catches, survey indices and instantaneous rate of biomass decrease, g.
}
\section{Methods}{

Methods exist for various calculations based on the output class (\code{FLPar}). For details: \code{?FLPar}.
}

\examples{

# Load data
data(ane)


# Case: object='FLQuant'; indicesB=indicesP='FLQuants'
inits1 <- createInits( catch.ane,
                       indicesB=lapply( indicesB.ane, function(x) x@index), 
                       indicesP=lapply( indicesP.ane, function(x) x@index), 
                       findicesB=unlist(lapply( indicesB.ane, function(x) mean(range(x)[c('startf','endf')]))),
                       findicesP=unlist(lapply( indicesP.ane, function(x) mean(range(x)[c('startf','endf')]))), 
                       g=control.ane@g )
class(inits1)

# Case: object='FLQuant'; indicesB=indicesP='ANY'

stock <- FLStock(catch.n=catch.ane, catch.wt=catch.ane*0+1)
units(stock@catch.wt) <- ''
stock@catch <- quantSums(stock@catch.n*stock@catch.wt)

inits2 <- createInits( stock, indicesB=indicesB.ane, indicesP=indicesP.ane, 
                       g=control.ane@g )
class(inits2)

# Case: object='FLQuant'; indicesB=indicesP='FLIndices'

inits3 <- createInits( catch.ane,
                       indicesB=indicesB.ane, indicesP=indicesP.ane, 
                       g=control.ane@g )
class(inits3)

# Case: object='FLQuant'; indicesB=indicesP='FLQuant'
inits4 <- createInits( catch.ane,
                       indicesB=indicesB.ane[[1]]@index, indicesP=indicesP.ane[[1]]@index, 
                       findicesB=c( depm=(indicesB.ane[[1]]@range[['startf']]+indicesB.ane[[1]]@range[['endf']])/2),
                       findicesP=c( depm=(indicesP.ane[[1]]@range[['startf']]+indicesP.ane[[1]]@range[['endf']])/2), 
                       g=control.ane@g )
class(inits4)

# Run assessment (with the different initial values)
run0 <- bbm(catch.ane, indicesB=indicesB.ane, indicesP=indicesP.ane, control=control.ane, inits=inits.ane)
run1 <- bbm(catch.ane, indicesB=indicesB.ane, indicesP=indicesP.ane, control=control.ane, inits=inits1)
run2 <- bbm(catch.ane, indicesB=indicesB.ane, indicesP=indicesP.ane, control=control.ane, inits=inits2)
run3 <- bbm(catch.ane, indicesB=indicesB.ane, indicesP=indicesP.ane, control=control.ane, inits=inits3)
namdel <- c("q_acoustic","psi_acoustic","xi_acoustic") # we will take only one of the indices --> need to delete the parameters related to other indices
control <- control.ane
control@param.fix <- control@param.fix[dimnames(control@param.fix)$params[!dimnames(control@param.fix)$params \%in\% namdel],]
run4 <- bbm(catch.ane, indicesB=indicesB.ane[[1]]@index, indicesP=indicesP.ane[[1]]@index, 
            findicesB=c( depm=(indicesB.ane[[1]]@range[['startf']]+indicesB.ane[[1]]@range[['endf']])/2),
            findicesP=c( depm=(indicesP.ane[[1]]@range[['startf']]+indicesP.ane[[1]]@range[['endf']])/2), 
            control=control, inits=inits4)

# Plot assessed populations
biomass <- FLQuants()
runs <- paste("run",0:4,sep="")
names(runs) <- c('bc','run1','run2','run3','only_depm')
for (i in 1:length(runs)) biomass[[i]] <- quantSums(stock.bio(get(runs[i])))
names(biomass) <- names(runs)
plot( biomass)

}
\seealso{
\link{bbm}, \linkS4class{FLQuant}, \linkS4class{FLQuants}, \link{FLIndices}, \link{FLPar}, \link{bbmFLPar}
}
\author{
Leire Ibaibarriaga & Sonia Sanchez.
}
\keyword{FLPar}
\keyword{methods}
